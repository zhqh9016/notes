package com.taikang.dic.ltci.treatment.application.service.impl;

import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import com.taikang.dic.ltci.portal.api.model.RestResponseDTO;
import com.taikang.dic.ltci.portal.api.model.ResultDTO;
import com.taikang.dic.ltci.portal.api.model.UserDTO;
import com.taikang.dic.ltci.portal.common.restRequestResponse.RestResponseFormat;
import com.taikang.dic.ltci.portal.common.util.UserUtils;
import com.taikang.dic.ltci.treatment.application.common.ParametersIsNullException;
import com.taikang.dic.ltci.treatment.application.serverClient.InsuredPersonServerClient;
import com.taikang.dic.ltci.treatment.application.service.InsuredPersonService;

/**
 * @author itw_liuxy
 * @description
 * @createTime 2017年3月31日 下午3:31:10
 */
@Service
public class InsuredPersonServiceImpl implements InsuredPersonService {

  private static final Logger logger = LoggerFactory.getLogger(InsuredPersonServiceImpl.class);

  @Autowired private InsuredPersonServerClient insuredPersonServerClient;

  @Value(value = "${spring.application.name}")
  private String systemCode;

  /**
   * 查询参保人信息 1.查询社保局中的参保人信息 2.查询微服务中的参保人信息 3.将社保局中的信息保存到DTO中
   *
   * @param idCard
   * @param insuredPersonName
   * @return
   */
  public ResultDTO getInsuredPerson(String idCard, String insuredPersonName) {
    //首先调用社保局的接口，查询参保人的具体信息，接口未定义？？？
    if (StringUtils.isBlank(idCard) || StringUtils.isBlank(insuredPersonName)) {
      throw new ParametersIsNullException("请求参数不能为空！");
    }
    UserDTO userDTO = UserUtils.getCurrentUser();
    String uniqueNumber = "jingmen";
    String operator = "jingban";

    if (userDTO != null) {
      operator = userDTO.getUserName();
      if (userDTO.getDepartment() != null) {
        uniqueNumber = userDTO.getDepartment().getCode().substring(6);
      }
    }
    RestResponseDTO restResponseDTO =
        insuredPersonServerClient.getInsuredPerson(
            idCard, insuredPersonName, uniqueNumber, operator, systemCode);
    return RestResponseFormat.restResponseDTO2ResultDTO(restResponseDTO);
  }

  public ResultDTO getInsuredPersonDetail(
      String insuredPersonCode, String idCard, String securityNum) {
    RestResponseDTO restResponseDTO =
        insuredPersonServerClient.getInsuredPersonDetail(insuredPersonCode, idCard, securityNum);
    return RestResponseFormat.restResponseDTO2ResultDTO(restResponseDTO);
  }
}
